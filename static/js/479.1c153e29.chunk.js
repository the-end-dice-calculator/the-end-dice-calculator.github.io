(()=>{"use strict";const e=function(e){return{...e,...arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}}};function*n(e){const r=[[1],[2],[3],[4],[5],[6]];if(e<=0)return[];if(1===e)yield*r;else for(let t of n(e-1))yield*r.map((e=>e.concat(t)))}const r=[1,6,36,216,1296,7776,6**6,6**7,6**8,6**9,6**10],t=e=>{const n=Object.values(e).reduce(((e,n)=>e+n),0);((e,n)=>{for(let o of r)if(t=e,i=o,Math.abs(t-i)<.1)return;var t,i;console.error("Sanity check failed, normalize denom is ".concat(e,". Expected a power of six between 1 and 6^10.")),console.error(n)})(n,e);return Object.fromEntries(Object.entries(e).map((e=>{let[r,t]=e;return[r,t/n]})))},i=(e,n)=>e.map((e=>e===n)).filter(Boolean).length,o=(e,n)=>e.map(((e,r)=>e===n?r:null)).filter((e=>null!=e));const c=r=>{const c={BRUTAL_CRIT:0,CRIT:0,BRUTAL_HIT:0,HIT:0,MISS:0},s=function(r,t){let R=arguments.length>2&&void 0!==arguments[2]&&arguments[2],I=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(r.rapid_fire){const i=o(t,1).filter((e=>!I.includes(e)));if(i.length){const o=1/6**i.length;for(let c of function*(e,r){const t=n(r.length);for(let n of t)yield e.map(((e,t)=>r.includes(t)?n[r.indexOf(t)]:e))}(t,i))s(e(r,{rapid_fire:!1}),c,!0,I.concat(i),T*o);return}}if(r.precise&&1===i(t,2)&&0===i(t,1)&&(r=e(r,{precise:!1}),t[t.indexOf(2)]+=1,R=!0),r.brutal&&(t.includes(1)||t.includes(2))){const n=((e,n)=>{const r=o(e,1),t=o(e,2);for(let i of r.concat(t))if(!n.includes(i))return i;return-1})(t,I);if(n>=0)return void[1,2,3,4,5,6].forEach((i=>{const o=t.map(((e,r)=>r===n?i:e));s(e(r,{brutal:!1}),o,!0,I.concat(n),T/6)}))}r.precise&&(1===i(t,2)&&0===i(t,1)||1===i(t,5)&&i(t,6)===t.length-1)&&(r=e(r,{precise:!1}),t[t.indexOf(Math.min(...t))]+=1,R=!0);const f=((e,n)=>Math.min(...e)<3?"MISS":Math.min(...e)<6?n?"BRUTAL_HIT":"HIT":n?"BRUTAL_CRIT":"CRIT")(t,r.brutal&&!R&&0===I.length);c[f]+=T};for(let e of n((e=>1+e.injuries+(e.long_shot?1:0)+(e.moving?1:0)+(e.cover_penalty?1:0)+(e.target_running?1:0))(r)))s(r,e);return t(c)},s=r=>{const i={COVER:0,ARMOR:0,HIT:0},o=(n,r)=>{let t=0;if(n.cover_save){const i=5;let o=r[t++];if(n.piercing&&o===i&&(n=e(n,{piercing:!1}),o-=1),n.scoped&&o>=i&&(n=e(n,{scoped:!1}),o=r[t++]),n.piercing&&o>=i&&(n=e(n,{piercing:!1}),o-=1),o>=i)return"COVER"}if(n.armor&&n.armor<7){const i=n.armor;let o=r[t++];if(n.piercing&&o===i&&(n=e(n,{piercing:!1}),o-=1),n.scoped&&o>=i&&(n=e(n,{scoped:!1}),o=r[t++]),n.piercing&&o>=i&&(n=e(n,{piercing:!1}),o-=1),o>=i)return"ARMOR"}return"HIT"},c=n(3);for(let e of c)i[o(r,e)]+=1;return t(i)},R=r=>{const i={COVER:0,ARMOR:0,DOUBLE_ARMOR:0,HIT:0,ARMOR_AND_HIT:0,DOUBLE_HIT:0},o=(n,r)=>{let t=0,i=1;const o=()=>Math.max(t,i)+1;let c=!1;if(n.cover_save){const s=5,R=[r[t],r[i]];if(t=o(),i=o(),n.piercing&&R.some((e=>e===s))){n=e(n,{piercing:!1});const r=R.findIndex((e=>e===s));R[r]-=1}if(n.scoped&&R.some((e=>e>=s))){n=e(n,{scoped:!1});const i=R.findIndex((e=>e>=s));R[i]=r[t],t=o()}if(n.piercing&&R.some((e=>e>=s))){n=e(n,{piercing:!1});let r=R.findIndex((e=>e===s));-1===r&&(r=R.findIndex((e=>e>=s))),R[r]-=1}if(R.every((e=>e>=s)))return"COVER";R.some((e=>e>=s))&&(c=!0)}if(n.armor&&n.armor<7){const s=n.armor;if(c){let i=r[t];return t=o(),n.piercing&&i===s&&(n=e(n,{piercing:!1}),i-=1),n.scoped&&i>=s&&(n=e(n,{scoped:!1}),i=r[t],t=o()),n.piercing&&i>=s&&(n=e(n,{piercing:!1}),i-=1),i>=s?"ARMOR":"HIT"}{const c=[r[t],r[i]];if(t=o(),i=o(),n.piercing&&c.some((e=>e===s))){n=e(n,{piercing:!1});const r=c.findIndex((e=>e===s));c[r]-=1}if(n.scoped&&c.some((e=>e>=s))){n=e(n,{scoped:!1});const i=c.findIndex((e=>e>=s));c[i]=r[t],t=o()}if(n.piercing&&c.some((e=>e>=s))){n=e(n,{piercing:!1});let r=c.findIndex((e=>e===s));-1===r&&(r=c.findIndex((e=>e>=s))),c[r]-=1}return c.every((e=>e>=s))?"DOUBLE_ARMOR":c.some((e=>e>=s))?"ARMOR_AND_HIT":"DOUBLE_HIT"}}return c?"HIT":"DOUBLE_HIT"},c=n(5);for(let e of c)i[o(r,e)]+=1;return t(i)},I=n=>n.brutal?(n=>{const r=c(n),t=s(n),i=n.cover_save?s(e(n,{cover_save:!1})):t,o=R(n),I=n.cover_save?R(e(n,{cover_save:!1})):o;return f=t,a=i,l=o,d=I,{KILL:(T=r).BRUTAL_CRIT*d.DOUBLE_HIT+T.BRUTAL_CRIT*d.ARMOR_AND_HIT+T.CRIT*a.HIT,BRUTAL_HIT:T.BRUTAL_HIT*l.DOUBLE_HIT,HIT:T.HIT*f.HIT+T.BRUTAL_HIT*l.HIT,HIT_AND_ARMOR_BREAK:T.BRUTAL_HIT*l.ARMOR_AND_HIT,ARMOR_BREAK:T.HIT*f.ARMOR+T.CRIT*a.ARMOR+T.BRUTAL_HIT*l.ARMOR,DOUBLE_ARMOR_BREAK:T.BRUTAL_HIT*l.DOUBLE_ARMOR+T.BRUTAL_CRIT*d.DOUBLE_ARMOR,MISS:T.MISS+T.HIT*f.COVER+T.BRUTAL_HIT*l.COVER};var T,f,a,l,d})(n):(n=>{const r=c(n),t=s(n),i=n.cover_save?s(e(n,{cover_save:!1})):t;return R=t,I=i,{KILL:(o=r).CRIT*I.HIT,HIT:o.HIT*R.HIT,ARMOR_BREAK:o.HIT*R.ARMOR+o.CRIT*I.ARMOR,MISS:o.MISS+o.HIT*R.COVER};var o,R,I})(n);onmessage=function(e){const n=I(e.data.circumstances);postMessage({requestTime:e.data.requestTime,output:n})}})();
//# sourceMappingURL=479.1c153e29.chunk.js.map